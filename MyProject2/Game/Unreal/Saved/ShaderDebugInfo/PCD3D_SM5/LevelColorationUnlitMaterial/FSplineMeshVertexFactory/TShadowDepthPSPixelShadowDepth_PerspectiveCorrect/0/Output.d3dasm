//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer ShadowDepthPass
// {
//
//   float PrePadding_ShadowDepthPass_0;// Offset:    0 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_4;// Offset:    4 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_8;// Offset:    8 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_12;// Offset:   12 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_16;// Offset:   16 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_20;// Offset:   20 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_24;// Offset:   24 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_28;// Offset:   28 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_32;// Offset:   32 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_36;// Offset:   36 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_40;// Offset:   40 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_44;// Offset:   44 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_48;// Offset:   48 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_52;// Offset:   52 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_56;// Offset:   56 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_60;// Offset:   60 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_64;// Offset:   64 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_68;// Offset:   68 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_72;// Offset:   72 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_76;// Offset:   76 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_80;// Offset:   80 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_84;// Offset:   84 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_88;// Offset:   88 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_92;// Offset:   92 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_96;// Offset:   96 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_100;// Offset:  100 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_104;// Offset:  104 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_108;// Offset:  108 Size:     4 [unused]
//   row_major float4x4 ShadowDepthPass_ProjectionMatrix;// Offset:  112 Size:    64 [unused]
//   row_major float4x4 ShadowDepthPass_ViewMatrix;// Offset:  176 Size:    64 [unused]
//   float4 ShadowDepthPass_ShadowParams;// Offset:  240 Size:    16
//   float ShadowDepthPass_bClampToNearPlane;// Offset:  256 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_260;// Offset:  260 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_264;// Offset:  264 Size:     4 [unused]
//   float PrePadding_ShadowDepthPass_268;// Offset:  268 Size:     4 [unused]
//   row_major float4x4 ShadowDepthPass_ShadowViewProjectionMatrices[6];// Offset:  272 Size:   384 [unused]
//   row_major float4x4 ShadowDepthPass_ShadowViewMatrices[6];// Offset:  656 Size:   384 [unused]
//   int ShadowDepthPass_bRenderToVirtualShadowMap;// Offset: 1040 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ShadowDepthPass                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 6   x           0     NONE   float   x   
// TEXCOORD                 8    y          0     NONE   float    y  
// SV_Position              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_DEPTH                 0    N/A   oDepth    DEPTH   float    YES
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[16], immediateIndexed
dcl_input_ps linear v0.x
dcl_input_ps linear v0.y
dcl_output oDepth
dcl_temps 1
mad r0.x, -v0.x, cb0[15].w, v0.y
add_sat oDepth, r0.x, l(1.000000)
ret 
// Approximately 3 instruction slots used
