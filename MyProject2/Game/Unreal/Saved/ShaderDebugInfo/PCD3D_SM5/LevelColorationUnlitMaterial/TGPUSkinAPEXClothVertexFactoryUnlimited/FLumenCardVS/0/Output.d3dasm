//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   row_major float4x4 ClothToLocal;   // Offset:    0 Size:    64
//   float ClothBlendWeight;            // Offset:   64 Size:     4
//   uint InputWeightIndexSize;         // Offset:   68 Size:     4
//   uint2 GPUSkinApexClothStartIndexOffset;// Offset:   72 Size:     8
//
// }
//
// cbuffer View
// {
//
//   row_major float4x4 View_View_TranslatedWorldToClip;// Offset:    0 Size:    64
//   float3 View_View_ViewTilePosition; // Offset:  960 Size:    12
//   float3 View_View_RelativePreViewTranslation;// Offset: 1152 Size:    12
//   uint View_View_InstanceSceneDataSOAStride;// Offset: 4432 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// View_PrimitiveSceneData           texture    byte         r/o             t0      1 
// View_InstanceSceneData            texture    byte         r/o             t1      1 
// InstanceCulling_InstanceIdsBuffer    texture    byte         r/o             t2      1 
// ClothSimulVertsPositionsNormals    texture  float4         buf             t3      1 
// InputWeightStream                 texture   uint4         buf             t4      1 
// GPUSkinApexCloth                  texture  float4         buf             t5      1 
// BoneMatrices                      texture  float4         buf             t6      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// View                              cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// ATTRIBUTE                0   xyzw        0     NONE   float   xyz 
// ATTRIBUTE                1   xyz         1     NONE   float   xyz 
// ATTRIBUTE                2   xyzw        2     NONE   float   xyzw
// ATTRIBUTE                3   x           3     NONE    uint   x   
// ATTRIBUTE               16   x           4     NONE    uint   x   
// SV_VertexID              0   x           5   VERTID    uint   x   
// SV_InstanceID            0   x           6   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyzw
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// PRIMITIVE_ID             0   x           2     NONE    uint   x   
// SV_Position              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[278], immediateIndexed
dcl_resource_raw t0
dcl_resource_raw t1
dcl_resource_raw t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (float,float,float,float) t5
dcl_resource_buffer (float,float,float,float) t6
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.x
dcl_input v4.x
dcl_input_sgv v5.x, vertex_id
dcl_input_sgv v6.x, instance_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.x
dcl_output_siv o3.xyzw, position
dcl_temps 22
and [precise(xy)] r0.xy, v4.xxxx, l(0x80000000, 0x7fffffff, 0, 0)
imul [precise(y)] null, r0.y, r0.y, l(40)
bfi [precise(y)] r0.y, l(28), l(4), r0.y, l(4)
ld_raw_indexable [precise(y)](raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t0.xxxx
iadd [precise(y)] r0.y, r0.y, v6.x
iadd [precise(z)] r0.z, v4.x, v6.x
ishl [precise(z)] r0.z, r0.z, l(2)
ld_raw_indexable [precise(z)](raw_buffer)(mixed,mixed,mixed,mixed) r0.z, r0.z, t2.xxxx
and [precise(z)] r0.z, r0.z, l(0x0fffffff)
movc [precise(x)] r0.x, r0.x, r0.y, r0.z
ishl [precise(y)] r0.y, r0.x, l(4)
ld_raw_indexable [precise(y)](raw_buffer)(mixed,mixed,mixed,mixed) r0.y, r0.y, t1.xxxx
and [precise(z)] r0.z, r0.y, l(0x000fffff)
ine [precise(w)] r0.w, r0.z, l(0x000fffff)
if_nz r0.w
  iadd [precise(w)] r0.w, r0.x, cb1[277].x
  ishl [precise(w)] r0.w, r0.w, l(4)
  ld_raw_indexable [precise](raw_buffer)(mixed,mixed,mixed,mixed) r1.xyzw, r0.w, t1.zxwy
  ishl [precise(w)] r0.w, cb1[277].x, l(1)
  iadd [precise(x)] r0.x, r0.x, r0.w
  ishl [precise(x)] r0.x, r0.x, l(4)
  ld_raw_indexable [precise(xyz)](raw_buffer)(mixed,mixed,mixed,mixed) r2.xyz, r0.x, t1.xyzx
  and [precise(xyz)] r3.xyz, r1.wyww, l(0x00007fff, 0x0000ffff, 0x00008000, 0)
  utof [precise(xy)] r4.xy, r3.xyxx
  ushr [precise(xyw)] r3.xyw, r1.yxyz, l(16, 16, 0, 16)
  utof [precise(z)] r4.z, r3.x
  add [precise(xyz)] r4.xyz, r4.yzxy, l(-32768.000000, -32768.000000, -16384.000000, 0.000000)
  mul [precise(xyz)] r4.xyz, r4.xyzx, l(0.000031, 0.000031, 0.000043, 0.000000)
  add [precise(x)] r5.x, r4.y, r4.x
  add [precise(y)] r5.y, -r4.y, r4.x
  dp2 [precise(x)] r0.x, l(1.000000, 1.000000, 0.000000, 0.000000), |r5.xyxx|
  add [precise(z)] r5.z, -r0.x, l(2.000000)
  dp3 [precise(x)] r0.x, r5.xyzx, r5.xyzx
  rsq [precise(x)] r0.x, r0.x
  mul [precise(xyw)] r4.xyw, r0.xxxx, r5.xyxz
  add [precise(x)] r0.x, r4.w, l(1.000000)
  div [precise(x)] r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  mov [precise(xy)] r5.xy, -r4.xyxx
  mul [precise(w)] r0.w, r4.y, r5.x
  mul [precise(z)] r6.z, r0.x, r0.w
  mul [precise(w)] r0.w, r4.z, r4.z
  add [precise(w)] r0.w, -r0.w, l(1.000000)
  sqrt [precise(w)] r0.w, r0.w
  mul [precise(xy)] r7.xy, r4.xyxx, r4.xyxx
  mul [precise(xy)] r7.xy, r0.xxxx, r7.xyxx
  add [precise(xy)] r6.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  swapc [precise(x)] r0.x, r3.x, r3.z, r4.z, r0.w
  mov [precise(w)] r6.w, r5.x
  mul [precise(xyz)] r7.xyz, r3.xxxx, r6.xzwx
  mov [precise(zw)] r5.zw, r6.zzzy
  mul [precise(xyz)] r5.xyz, r0.xxxx, r5.zwyz
  add [precise(xyz)] r5.xyz, r5.xyzx, r7.xyzx
  mul [precise(xyz)] r6.xyz, r4.ywxy, r5.zxyz
  mul [precise(xyz)] r7.xyz, r4.wxyw, r5.yzxy
  add [precise(xyz)] r6.xyz, r6.xyzx, -r7.xyzx
  mov [precise(y)] r1.y, r3.y
  and [precise(xyz)] r1.xyz, r1.xyzx, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0)
  utof [precise(xyz)] r1.xyz, r1.xyzx
  add [precise(xyz)] r1.xyz, r1.xyzx, l(-32768.000000, -32768.000000, -32768.000000, 0.000000)
  ishl [precise(x)] r0.x, r3.w, l(23)
  iadd [precise(x)] r0.x, r0.x, l(0xf8800000)
  mul [precise(xyz)] r1.xyz, r0.xxxx, r1.xyzx
  mul [precise(xyz)] r3.xyz, r1.xxxx, r5.xyzx
  mul [precise(xyz)] r5.xyz, r1.yyyy, r6.xyzx
  mul [precise(xyz)] r4.xyz, r1.zzzz, r4.xywx
  div r1.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), |r1.xyzx|
  bfi [precise(x)] r0.x, l(20), l(2), r0.y, l(0)
  imad [precise(x)] r0.x, r0.x, l(160), l(16)
  ld_raw_indexable [precise(xyz)](raw_buffer)(mixed,mixed,mixed,mixed) r6.xyz, r0.x, t0.xyzx
  ubfe r0.x, l(1), l(20), r0.y
  movc r0.x, r0.x, l(-1.000000), l(1.000000)
else 
  mov [precise(xyz)] r3.xyz, l(0,0,0,0)
  mov [precise(xyz)] r5.xyz, l(0,0,0,0)
  mov [precise(xyz)] r4.xyz, l(0,0,0,0)
  mov [precise(xyz)] r2.xyz, l(0,0,0,0)
  mov [precise(xyz)] r6.xyz, l(0,0,0,0)
  mov r1.xyz, l(0,0,0,0)
  mov r0.x, l(0)
endif 
iadd [precise(y)] r0.y, v5.x, -cb0[4].z
iadd [precise(y)] r0.y, r0.y, cb0[4].w
bfi [precise(w)] r0.w, l(30), l(2), r0.y, l(3)
ld_indexable [precise(xy)](buffer)(float,float,float,float) r7.xy, r0.wwww, t5.xyzw
ushr [precise(zw)] r7.zw, r7.xxxy, l(0, 0, 16, 16)
and [precise] r8.xyzw, r7.xyxy, l(0x0000ffff, 0x0000ffff, 0x0000ffff, 0x0000ffff)
ult [precise(w)] r0.w, r7.w, l(0x0000ffff)
if_nz r0.w
  ishl [precise(w)] r1.w, r0.y, l(2)
  ld_indexable [precise(xyz)](buffer)(float,float,float,float) r9.xyz, r1.wwww, t5.xywz
  imul [precise(xy)] null, r7.xy, r8.zwzz, l(3, 3, 0, 0)
  imul [precise(w)] null, r1.w, r7.z, l(3)
  imad [precise(xy)] r10.xy, r7.zzzz, l(3, 3, 0, 0), l(1, 2, 0, 0)
  imad [precise] r11.xyzw, r8.zwzw, l(3, 3, 3, 3), l(1, 1, 2, 2)
  utof [precise(w)] r2.w, r7.w
  mul [precise(w)] r2.w, r2.w, l(0.000015)
  add [precise(w)] r2.w, -r2.w, l(1.000000)
  ld_indexable [precise(zw)](buffer)(float,float,float,float) r10.zw, r7.xxxx, t3.zwxy
  ld_indexable [precise(xz)](buffer)(float,float,float,float) r12.xz, r11.xxxx, t3.yzxw
  ld_indexable [precise(yz)](buffer)(float,float,float,float) r13.yz, r11.zzzz, t3.zxyw
  mov [precise(x)] r13.x, r12.x
  mul [precise(xyz)] r13.xyz, r9.zzzz, r13.xyzx
  mov [precise(xy)] r12.xy, r10.zwzz
  add [precise(xyz)] r12.xyz, r13.xyzx, r12.xyzx
  mul [precise(xyz)] r12.xyz, r9.xxxx, r12.xyzx
  ld_indexable [precise(zw)](buffer)(float,float,float,float) r10.zw, r1.wwww, t3.zwxy
  ld_indexable [precise(xz)](buffer)(float,float,float,float) r13.xz, r10.xxxx, t3.yzxw
  ld_indexable [precise(yz)](buffer)(float,float,float,float) r14.yz, r10.yyyy, t3.zxyw
  mov [precise(x)] r14.x, r13.x
  mul [precise(xyz)] r14.xyz, r9.zzzz, r14.xyzx
  mov [precise(xy)] r13.xy, r10.zwzz
  add [precise(xyz)] r10.xyz, r14.xyzx, r13.xyzx
  mul [precise(xyz)] r10.xyz, r9.yyyy, r10.xyzx
  add [precise(xyz)] r10.xyz, r10.xyzx, r12.xyzx
  ld_indexable [precise(xy)](buffer)(float,float,float,float) r7.xy, r7.yyyy, t3.xyzw
  ld_indexable [precise(xz)](buffer)(float,float,float,float) r11.xz, r11.yyyy, t3.yzxw
  ld_indexable [precise(yz)](buffer)(float,float,float,float) r12.yz, r11.wwww, t3.zxyw
  mov [precise(x)] r12.x, r11.x
  mul [precise(xyz)] r12.xyz, r9.zzzz, r12.xyzx
  mov [precise(xy)] r11.xy, r7.xyxx
  add [precise(xyz)] r11.xyz, r12.xyzx, r11.xyzx
  add [precise(w)] r1.w, -r9.x, l(1.000000)
  add [precise(w)] r1.w, -r9.y, r1.w
  mul [precise(xyz)] r9.xyz, r1.wwww, r11.xyzx
  add [precise(xyz)] r9.xyz, r9.xyzx, r10.xyzx
else 
  mov [precise(xyz)] r9.xyz, v0.xyzx
  mov [precise(w)] r2.w, l(0)
endif 
and [precise(w)] r1.w, v3.x, l(255)
ushr [precise(w)] r3.w, v3.x, l(8)
imad [precise(w)] r4.w, cb0[4].y, r1.w, r3.w
mov [precise] r10.xyzw, l(0,0,0,0)
mov [precise] r11.xyzw, l(0,0,0,0)
mov [precise] r12.xyzw, l(0,0,0,0)
mov [precise(w)] r5.w, cb0[4].y
mov [precise(w)] r6.w, l(0)
loop 
  ige [precise(x)] r7.x, r6.w, r1.w
  breakc_nz r7.x
  imad [precise(x)] r7.x, r5.w, r6.w, r3.w
  ld_indexable [precise(y)](buffer)(uint,uint,uint,uint) r7.y, r7.xxxx, t4.yxzw
  ult [precise(w)] r9.w, l(1), r5.w
  if_nz r9.w
    iadd [precise(w)] r9.w, r4.w, r6.w
    ld_indexable [precise(w)](buffer)(uint,uint,uint,uint) r9.w, r9.wwww, t4.yzwx
    utof [precise(w)] r9.w, r9.w
    mul [precise(w)] r9.w, r9.w, l(0.003922)
    iadd [precise(x)] r7.x, r7.x, l(1)
    ld_indexable [precise(x)](buffer)(uint,uint,uint,uint) r7.x, r7.xxxx, t4.xyzw
    ishl [precise(x)] r7.x, r7.x, l(8)
    or [precise(x)] r7.x, r7.y, r7.x
    imul [precise(x)] null, r13.x, r7.x, l(3)
    ld_indexable [precise](buffer)(float,float,float,float) r13.xyzw, r13.xxxx, t6.xyzw
    mul [precise] r13.xyzw, r9.wwww, r13.xyzw
    add [precise] r10.xyzw, r10.xyzw, r13.xyzw
    imad [precise(xy)] r13.xy, r7.xxxx, l(3, 3, 0, 0), l(1, 2, 0, 0)
    ld_indexable [precise](buffer)(float,float,float,float) r14.xyzw, r13.xxxx, t6.xyzw
    mul [precise] r14.xyzw, r9.wwww, r14.xyzw
    add [precise] r11.xyzw, r11.xyzw, r14.xyzw
    ld_indexable [precise](buffer)(float,float,float,float) r13.xyzw, r13.yyyy, t6.xyzw
    mul [precise] r13.xyzw, r9.wwww, r13.xyzw
    add [precise] r12.xyzw, r12.xyzw, r13.xyzw
  else 
    iadd [precise(x)] r7.x, r4.w, r6.w
    ld_indexable [precise(x)](buffer)(uint,uint,uint,uint) r7.x, r7.xxxx, t4.xyzw
    utof [precise(x)] r7.x, r7.x
    mul [precise(x)] r7.x, r7.x, l(0.003922)
    imul [precise(w)] null, r9.w, r7.y, l(3)
    ld_indexable [precise](buffer)(float,float,float,float) r13.xyzw, r9.wwww, t6.xyzw
    mul [precise] r13.xyzw, r7.xxxx, r13.xyzw
    add [precise] r10.xyzw, r10.xyzw, r13.xyzw
    imad [precise(xy)] r13.xy, r7.yyyy, l(3, 3, 0, 0), l(1, 2, 0, 0)
    ld_indexable [precise](buffer)(float,float,float,float) r14.xyzw, r13.xxxx, t6.xyzw
    mul [precise] r14.xyzw, r7.xxxx, r14.xyzw
    add [precise] r11.xyzw, r11.xyzw, r14.xyzw
    ld_indexable [precise](buffer)(float,float,float,float) r13.xyzw, r13.yyyy, t6.xyzw
    mul [precise] r13.xyzw, r7.xxxx, r13.xyzw
    add [precise] r12.xyzw, r12.xyzw, r13.xyzw
  endif 
  iadd [precise(w)] r6.w, r6.w, l(1)
endloop 
if_nz r0.w
  bfi r7.xy, l(30, 30, 0, 0), l(2, 2, 0, 0), r0.yyyy, l(1, 2, 0, 0)
  ld_indexable(buffer)(float,float,float,float) r13.xyzw, r7.xxxx, t5.xyzw
  ld_indexable(buffer)(float,float,float,float) r14.xyzw, r7.yyyy, t5.xyzw
  imul null, r7.xy, r8.zwzz, l(3, 3, 0, 0)
  imad r8.xyzw, r8.xyzw, l(3, 3, 3, 3), l(1, 1, 2, 2)
  ld_indexable(buffer)(float,float,float,float) r15.xy, r7.xxxx, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r16.xz, r8.xxxx, t3.yzxw
  imul null, r0.y, r7.z, l(3)
  imad r7.xz, r7.zzzz, l(3, 0, 3, 0), l(1, 0, 2, 0)
  ld_indexable(buffer)(float,float,float,float) r15.zw, r0.yyyy, t3.zwxy
  ld_indexable(buffer)(float,float,float,float) r17.xz, r7.xxxx, t3.yzxw
  ld_indexable(buffer)(float,float,float,float) r7.xy, r7.yyyy, t3.xyzw
  ld_indexable(buffer)(float,float,float,float) r18.xz, r8.yyyy, t3.yzxw
  ld_indexable(buffer)(float,float,float,float) r8.yz, r8.zzzz, t3.zxyw
  ld_indexable(buffer)(float,float,float,float) r19.yz, r7.zzzz, t3.zxyw
  ld_indexable(buffer)(float,float,float,float) r20.yz, r8.wwww, t3.zxyw
  mov r8.x, r16.x
  mov r16.xy, r15.xyxx
  mad r21.xyz, r8.xyzx, r13.wwww, r16.xyzx
  mov r19.x, r17.x
  mov r17.xy, r15.zwzz
  mad r15.xyz, r19.xyzx, r13.wwww, r17.xyzx
  mul r15.xyz, r13.yyyy, r15.xyzx
  mad r15.xyz, r21.xyzx, r13.xxxx, r15.xyzx
  mov r20.x, r18.x
  mov r18.xy, r7.xyxx
  mad r7.xyz, r20.xyzx, r13.wwww, r18.xyzx
  mad r7.xyz, r7.xyzx, r13.zzzz, r15.xyzx
  mad r8.xyz, r8.xyzx, r14.wwww, r16.xyzx
  mad r13.xyz, r19.xyzx, r14.wwww, r17.xyzx
  mul r13.xyz, r14.yyyy, r13.xyzx
  mad r8.xyz, r8.xyzx, r14.xxxx, r13.xyzx
  mad r13.xyz, r20.xyzx, r14.wwww, r18.xyzx
  mad r8.xyz, r13.xyzx, r14.zzzz, r8.xyzx
  utof r0.y, r7.w
  mad r0.y, -r0.y, l(0.000015), l(1.000000)
  add r8.xyz, -r9.xyzx, r8.xyzx
  dp3 r1.w, r8.xyzx, r8.xyzx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r8.xyzx
  mul r13.xyz, r8.yyyy, cb0[1].xyzx
  mad r8.xyw, r8.xxxx, cb0[0].xyxz, r13.xyxz
  mad r8.xyz, r8.zzzz, cb0[2].xyzx, r8.xywx
  add r7.xyz, -r9.xyzx, r7.xyzx
  dp3 r1.w, r7.xyzx, r7.xyzx
  rsq r1.w, r1.w
  mul r7.xyz, r1.wwww, r7.xyzx
  mul r13.xyz, r7.yyyy, cb0[1].xyzx
  mad r7.xyw, r7.xxxx, cb0[0].xyxz, r13.xyxz
  mad r7.xyz, r7.zzzz, cb0[2].xyzx, r7.xywx
  mul r0.y, r0.y, cb0[4].x
else 
  mov r8.xyz, l(1.000000,0,0,0)
  mov r7.xyz, l(0,0,1.000000,0)
  mov r0.y, l(0)
endif 
dp3 r13.x, r10.xyzx, v1.xyzx
dp3 r13.y, r11.xyzx, v1.xyzx
dp3 r13.z, r12.xyzx, v1.xyzx
dp3 r1.w, r13.xyzx, r13.xyzx
rsq r1.w, r1.w
mul r13.xyz, r1.wwww, r13.xyzx
dp3 r14.x, r10.xyzx, v2.xyzx
dp3 r14.y, r11.xyzx, v2.xyzx
dp3 r14.z, r12.xyzx, v2.xyzx
dp3 r1.w, r14.xyzx, r14.xyzx
rsq r1.w, r1.w
mul r14.xyz, r1.wwww, r14.xyzx
add r1.w, -r0.y, l(1.000000)
mov [precise(xyz)] r15.xyz, v0.xyzx
mov [precise(w)] r15.w, l(1.000000)
dp4 [precise(x)] r10.x, r10.xyzw, r15.xyzw
dp4 [precise(y)] r10.y, r11.xyzw, r15.xyzw
dp4 [precise(z)] r10.z, r12.xyzw, r15.xyzw
mul [precise(xyz)] r11.xyz, r9.xxxx, cb0[0].xyzx
mul [precise(xyw)] r9.xyw, r9.yyyy, cb0[1].xyxz
add [precise(xyw)] r9.xyw, r9.xyxw, r11.xyxz
mul [precise(xyz)] r11.xyz, r9.zzzz, cb0[2].xyzx
add [precise(xyz)] r9.xyz, r9.xywx, r11.xyzx
add [precise(xyz)] r9.xyz, r9.xyzx, cb0[3].xyzx
mul [precise(w)] r2.w, r2.w, cb0[4].x
add [precise(xyz)] r9.xyz, -r10.xyzx, r9.xyzx
mul [precise(xyz)] r9.xyz, r2.wwww, r9.xyzx
add [precise(xyz)] r9.xyz, r9.xyzx, r10.xyzx
movc [precise(xyz)] r9.xyz, r0.wwww, r9.xyzx, r10.xyzx
mul [precise(xyz)] r10.xyz, r3.xyzx, r9.xxxx
mul [precise(xyw)] r9.xyw, r5.xyxz, r9.yyyy
add [precise(xyw)] r9.xyw, r9.xyxw, r10.xyxz
mul [precise(xyz)] r10.xyz, r4.xyzx, r9.zzzz
add [precise(xyz)] r9.xyz, r9.xywx, r10.xyzx
add [precise(xyz)] r2.xyz, r2.xyzx, r9.xyzx
add [precise(xyz)] r6.xyz, r6.xyzx, -cb1[60].xyzx
add [precise(xyz)] r2.xyz, r2.xyzx, cb1[72].xyzx
mul [precise(xyz)] r6.xyz, r6.xyzx, l(2097152.000000, 2097152.000000, 2097152.000000, 0.000000)
add [precise(xyz)] r2.xyz, r2.xyzx, r6.xyzx
mul [precise] r6.xyzw, r2.xxxx, cb1[0].xyzw
mul [precise] r9.xyzw, r2.yyyy, cb1[1].xyzw
add [precise] r6.xyzw, r6.xyzw, r9.xyzw
mul [precise] r2.xyzw, r2.zzzz, cb1[2].xyzw
add [precise] r2.xyzw, r2.xyzw, r6.xyzw
add [precise] o3.xyzw, r2.xyzw, cb1[3].xyzw
mul r2.xyz, r1.xxxx, r3.xyzx
mul r3.xyz, r1.yyyy, r5.xyzx
mul r1.xyz, r1.zzzz, r4.xyzx
mul r4.xyz, r1.wwww, r13.xyzx
mad r4.xyz, r8.xyzx, r0.yyyy, r4.xyzx
mul r5.xyz, r1.wwww, r14.xyzx
mad r5.xyz, r7.xyzx, r0.yyyy, r5.xyzx
mul r6.xyz, r3.xyzx, r4.yyyy
mad r4.xyw, r4.xxxx, r2.xyxz, r6.xyxz
mad o0.xyz, r4.zzzz, r1.xyzx, r4.xywx
mul r3.xyz, r3.xyzx, r5.yyyy
mad r2.xyz, r5.xxxx, r2.xyzx, r3.xyzx
mad o1.xyz, r5.zzzz, r1.xyzx, r2.xyzx
mul o1.w, r0.x, v2.w
mov o0.w, l(0)
mov [precise(x)] o2.x, r0.z
ret 
// Approximately 301 instruction slots used
